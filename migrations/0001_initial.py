# Generated by Django 4.2.25 on 2025-10-24 17:56

from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Disease',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('severity_level', models.PositiveIntegerField(default=1)),
                ('common_age_group', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Patient',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('age', models.PositiveIntegerField()),
                ('gender', models.CharField(choices=[('M', 'Male'), ('F', 'Female'), ('O', 'Other')], max_length=1)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.TextField(blank=True, null=True)),
                ('medical_history', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='Remedy',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('remedy_type', models.CharField(choices=[('NATURAL', 'Natural Remedy'), ('YOGA', 'Yoga Practice'), ('DIET', 'Dietary Recommendation'), ('LIFESTYLE', 'Lifestyle Change')], max_length=20)),
                ('description', models.TextField()),
                ('instructions', models.TextField()),
                ('contraindications', models.TextField(blank=True, null=True)),
                ('effectiveness_rating', models.PositiveIntegerField(default=1)),
                ('diseases', models.ManyToManyField(blank=True, related_name='remedies', to='health_predictor.disease')),
            ],
            options={
                'verbose_name_plural': 'Remedies',
            },
        ),
        migrations.CreateModel(
            name='Symptom',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField()),
                ('severity_level', models.PositiveIntegerField(default=1)),
                ('body_part', models.CharField(blank=True, max_length=50, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('title', models.CharField(max_length=200)),
                ('notes', models.TextField(blank=True, null=True)),
                ('status', models.CharField(choices=[('DRAFT', 'Draft'), ('COMPLETED', 'Completed'), ('SHARED', 'Shared')], default='DRAFT', max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reports', to='health_predictor.patient')),
                ('predicted_diseases', models.ManyToManyField(blank=True, related_name='reports', to='health_predictor.disease')),
                ('recommended_remedies', models.ManyToManyField(blank=True, related_name='reports', to='health_predictor.remedy')),
                ('symptoms', models.ManyToManyField(related_name='reports', to='health_predictor.symptom')),
            ],
        ),
        migrations.AddField(
            model_name='remedy',
            name='symptoms',
            field=models.ManyToManyField(blank=True, related_name='remedies', to='health_predictor.symptom'),
        ),
        migrations.AddField(
            model_name='disease',
            name='symptoms',
            field=models.ManyToManyField(related_name='diseases', to='health_predictor.symptom'),
        ),
    ]
